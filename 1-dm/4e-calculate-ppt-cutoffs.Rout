
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

- Project '~/Dropbox/08_JadeCollaboration/wbb-weather-diarrhea-enteropathogens' loaded. [renv 1.0.5]
> #######################################
> # WASH Benefits Bangladesh  
> # Hydrometeorological risk factors for diarrhea and enteropathogens
> 
> # Calculate cutoffs for categorical precipitation variables
> ################################################################################################
> 
> rm(list=ls())
> source(paste0(here::here(), "/0-config.R"))
here() starts at /Users/JGrembi/Dropbox/08_JadeCollaboration/wbb-weather-diarrhea-enteropathogens

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: ggplot2

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths


Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

Welcome to the washb package
Version: 0.2.2
Created on 2018-11-07

This software was developed with funding from the
Bill & Melinda Gates Foundation (grant number OPPGD759).

The package's reference manual and vignette are also online:
https://ben-arnold.github.io/washb


Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-40. For overview type 'help("mgcv-package")'.
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading required package: lme4

Attaching package: ‘lme4’

The following object is masked from ‘package:nlme’:

    lmList

This is gamm4 0.2-6

This is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')
Loading required package: viridisLite
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift


Attaching package: ‘wrapr’

The following objects are masked from ‘package:Matrix’:

    pack, unpack

The following object is masked from ‘package:mgcv’:

    %.%

The following objects are masked from ‘package:tidyr’:

    pack, unpack

The following object is masked from ‘package:dplyr’:

    coalesce

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
✔ tibble  3.2.1     ✔ forcats 0.5.2
✔ readr   2.1.3     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ wrapr::coalesce()        masks dplyr::coalesce()
✖ nlme::collapse()         masks dplyr::collapse()
✖ gridExtra::combine()     masks dplyr::combine()
✖ lubridate::date()        masks base::date()
✖ Matrix::expand()         masks tidyr::expand()
✖ dplyr::filter()          masks stats::filter()
✖ tibble::has_name()       masks assertthat::has_name()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ caret::lift()            masks purrr::lift()
✖ wrapr::pack()            masks Matrix::pack(), tidyr::pack()
✖ lubridate::setdiff()     masks base::setdiff()
✖ lubridate::union()       masks base::union()
✖ wrapr::unpack()          masks Matrix::unpack(), tidyr::unpack()
✖ tibble::view()           masks wrapr::view()

Attaching package: ‘kableExtra’

The following object is masked from ‘package:dplyr’:

    group_rows

Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: rngtools

Attaching package: ‘magrittr’

The following object is masked from ‘package:purrr’:

    set_names

The following object is masked from ‘package:tidyr’:

    extract


Attaching package: ‘cowplot’

The following object is masked from ‘package:lubridate’:

    stamp

> library(furrr)
Loading required package: future

Attaching package: ‘future’

The following object is masked from ‘package:rmarkdown’:

    run

The following object is masked from ‘package:caret’:

    cluster

> 
> ## Read in raw  ppt data 
> ## This includes daily data for all 64 pixels comprising the study area for the duration of the study period
> all_ppt_data = readRDS(paste0(box_data_path, "all_ppt_data_by_pixelID.RDS"))
> 
> average_daily_ppts = all_ppt_data %>% filter(ppt > 0) 
> 
> heavy_rain_cutoff_80th = as.numeric(quantile(average_daily_ppts$ppt, 0.8))
> heavy_rain_cutoff_90th = as.numeric(quantile(average_daily_ppts$ppt, 0.9))
> 
> future::plan(multisession, workers = 5)
> 
> ####################################################################################
> ## Weekly precipitation (7-day sum)
> ####################################################################################
> # Runtime: ~7800 secs/~130 min
> tic("7d ppt sum")
> all_7day_ppts = furrr::future_map_dfr(unique(all_ppt_data$date), function (d) {
+   ret = all_ppt_data %>%
+     filter(between(date, d - 7 + 1, d)) %>%
+     group_by(pixelID) %>%
+     summarize(sum_ppt = sum(ppt, na.rm = T),
+               n = n()) %>%
+     mutate(date = d)
+   return(ret)
+ })
> toc()
7d ppt sum: 16766.583 sec elapsed
> 
> saveRDS(all_7day_ppts, paste0(box_data_path, "all_7day_ppts.RDS")) 
> # all_7day_ppts <- readRDS(paste0(box_data_path, "all_7day_ppts.RDS"))
> 
> ##Take result and then, 
> # 1) remove anything from the first 6 days because the sum doesn't cover a full 7d
> # 2) calculate median over all values
> 
> median_7_day_ppts = all_7day_ppts %>%
+   filter(n == 7) %>%
+   summarise(median_7_day_ppt_sum = median(sum_ppt),
+             min_7_day_ppt_sum = min(sum_ppt),
+             max_7_day_ppt_sum = max(sum_ppt),
+             pct_75_cutoff_7_day_ppt_sum = as.numeric(quantile(sum_ppt, 0.75)),
+             pct_90_cutoff_7_day_ppt_sum = as.numeric(quantile(sum_ppt, 0.9)))
> 
> median_7d_cutoff = median_7_day_ppts$median_7_day_ppt_sum
> 
> 
> 
> ## Also calculate medians in dry and rainy season, as we will report these in the manuscript
> season_def = read.csv(rainy_seasons_path) %>% 
+   dplyr::select(-X) %>%
+   rename("year" = "season",
+          "season_start" = "start",
+          "season_end" = "end") %>%
+   mutate(season_start = as.Date(season_start), 
+          season_end = as.Date(season_end),
+          month_start = month(round_date(season_start, unit = "month")),
+          month_end = month(round_date(season_end, unit = "month")))
> 
> 
> season_all_7day_ppts = all_7day_ppts %>%
+   filter(n == 7) %>%
+   mutate(year = year(date), 
+          year = ifelse(year == 2011, 2012, year)) %>%
+   left_join(season_def, by = "year") %>%
+   mutate(season = factor(ifelse(date > season_start & date < season_end, 1, 0), 
+                          levels = c(0,1), 
+                          labels = c("dry", "rainy"))) %>%
+   group_by(season) %>%
+   summarise(median_7_day_ppt_sum = median(sum_ppt),
+             min_7_day_ppt_sum = min(sum_ppt),
+             max_7_day_ppt_sum = max(sum_ppt))
> 
> ####################################################################################
> ## Monthly precipitation 
> ####################################################################################
> # Runtime: ~8100 secs/~135 min
> tic("30d ppt")
> average_30day_ppts = future_map_dfr(unique(all_ppt_data$date), function (d) {
+   ret = all_ppt_data %>%
+     filter(between(date, d - 30 + 1, d)) %>%
+     group_by(pixelID) %>%
+     summarize(sum_ppt = sum(ppt, na.rm = T),
+               n = n()) %>%
+     mutate(date = d)
+   return(ret)
+ })
> toc()
30d ppt: 24358.364 sec elapsed
> 
> saveRDS(average_30day_ppts, paste0(box_data_path, "average_30day_ppts.RDS")) 
> 
> df_cutoffs_30d = average_30day_ppts %>%
+   filter(n == 30) #remove anything that doesn't sum over a full 30d period
> 
> (median_30day_cutoff = as.numeric(median(df_cutoffs_30d$sum_ppt)))
[1] 102.31
> #102.31
> 
> ####################################################################################
> ##  60-day precipitation (an important interaction term for assessing precipitation 
> ##    after an extended dry period where pathogens can accumulate in the environment)
> ####################################################################################
> # Runtime: ~8030 secs/~134 min
> tic("60d ppt")
> average_60day_ppts = future_map_dfr(unique(all_ppt_data$date), function (d) {
+   ret = all_ppt_data %>%
+     filter(between(date, d - 60 + 1, d)) %>%
+     group_by(pixelID) %>%
+     summarize(sum_ppt = sum(ppt, na.rm = T),
+               n = n()) %>%
+     mutate(date = d)
+   return(ret)
+ })
> toc()
60d ppt: 26007.34 sec elapsed
> 
> future::plan(sequential)
> saveRDS(average_60day_ppts, paste0(box_data_path, "average_60day_ppts.RDS")) 
> # average_60day_ppts <- readRDS(paste0(box_data_path, "average_60day_ppts.RDS"))
> 
> df_cutoffs_60d = average_60day_ppts %>%
+   filter(n == 60) #remove anything that doesn't sum over a full 60d period
> 
> 
> (med_60day_cutoff = as.numeric(quantile(df_cutoffs_60d$sum_ppt, 0.33)))
[1] 47.86
> #47.86
> (high_60day_cutoff = as.numeric(quantile(df_cutoffs_60d$sum_ppt, 0.66)))
[1] 448.2894
> #448.29
> 
> 
> 
> cutoffs = list(heavy_rain_cutoff = heavy_rain_cutoff_80th, 
+                heavy_rain_cutoff_90th = heavy_rain_cutoff_90th,
+                median_7d_cutoff = median_7d_cutoff,
+                pct_75_cutoff_7_day_ppt_sum = median_7_day_ppts$pct_75_cutoff_7_day_ppt_sum,
+                pct_90_cutoff_7_day_ppt_sum = median_7_day_ppts$pct_90_cutoff_7_day_ppt_sum,
+                min_7d_sum = median_7_day_ppts$min_7_day_ppt_sum,
+                max_7d_sum = median_7_day_ppts$max_7_day_ppt_sum,
+                median_7d_dry = season_all_7day_ppts$median_7_day_ppt_sum[season_all_7day_ppts$season == "dry"],
+                min_7d_dry = season_all_7day_ppts$min_7_day_ppt_sum[season_all_7day_ppts$season == "dry"],
+                max_7d_dry = season_all_7day_ppts$max_7_day_ppt_sum[season_all_7day_ppts$season == "dry"],
+                median_7d_wet = season_all_7day_ppts$median_7_day_ppt_sum[season_all_7day_ppts$season == "rainy"],
+                min_7d_wet = season_all_7day_ppts$min_7_day_ppt_sum[season_all_7day_ppts$season == "rainy"],
+                max_7d_wet = season_all_7day_ppts$max_7_day_ppt_sum[season_all_7day_ppts$season == "rainy"],
+                median_30day_cutoff = median_30day_cutoff,
+                med_60day_cutoff = med_60day_cutoff, 
+                high_60day_cutoff = high_60day_cutoff)
> 
> 
> saveRDS(cutoffs, paste0(box_data_path, "ppt_cutoffs.RDS")) 
> 
> #--------------------------------------
> # Capture session info
> #--------------------------------------
> sessionInfo()
R version 4.2.0 (2022-04-22)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur/Monterey 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  grid      stats     graphics  grDevices datasets  utils    
[8] methods   base     

other attached packages:
 [1] furrr_0.3.1        future_1.28.0      cowplot_1.1.1      MetBrewer_0.2.0   
 [5] RColorBrewer_1.1-3 rcartocolor_2.0.0  broom_1.0.5        magrittr_2.0.3    
 [9] doRNG_1.8.2        rngtools_1.5.2     doParallel_1.0.17  iterators_1.0.14  
[13] foreach_1.5.2      tictoc_1.1         rmarkdown_2.25     kableExtra_1.3.4  
[17] forcats_0.5.2      readr_2.1.3        tibble_3.2.1       tidyverse_1.3.2   
[21] pgirmess_2.0.0     wrapr_2.0.9        caret_6.0-93       lattice_0.20-45   
[25] viridis_0.6.4      viridisLite_0.4.2  purrr_1.0.2        DHARMa_0.4.6      
[29] gamm4_0.2-6        lme4_1.1-35.1      Matrix_1.6-4       mgcv_1.8-40       
[33] nlme_3.1-160       assertthat_0.2.1   boxr_0.3.6         ncdf4_1.19        
[37] stringr_1.5.1      lubridate_1.8.0    washb_0.2.2        gridExtra_2.3     
[41] reshape2_1.4.4     tidyr_1.3.0        ggcorrplot_0.1.4   ggplot2_3.4.4     
[45] dplyr_1.1.4        here_1.0.1        

loaded via a namespace (and not attached):
 [1] readxl_1.4.3         backports_1.4.1      systemfonts_1.0.4   
 [4] plyr_1.8.9           sp_1.5-0             splines_4.2.0       
 [7] listenv_0.8.0        digest_0.6.33        htmltools_0.5.7     
[10] fansi_1.0.6          googlesheets4_1.0.1  tzdb_0.3.0          
[13] recipes_1.0.2        globals_0.16.1       modelr_0.1.9        
[16] gower_1.0.0          svglite_2.1.0        hardhat_1.2.0       
[19] colorspace_2.1-0     rvest_1.0.3          haven_2.5.1         
[22] xfun_0.41            crayon_1.5.2         jsonlite_1.8.8      
[25] survival_3.4-0       glue_1.6.2           gtable_0.3.4        
[28] gargle_1.2.1         ipred_0.9-13         webshot_0.5.4       
[31] future.apply_1.9.1   scales_1.3.0         DBI_1.1.3           
[34] Rcpp_1.0.11          spData_2.2.0         units_0.8-0         
[37] spdep_1.2-7          proxy_0.4-27         stats4_4.2.0        
[40] lava_1.6.10          prodlim_2019.11.13   httr_1.4.7          
[43] wk_0.7.0             pkgconfig_2.0.3      nnet_7.3-18         
[46] dbplyr_2.2.1         deldir_1.0-6         utf8_1.2.4          
[49] tidyselect_1.2.0     rlang_1.1.2          munsell_0.5.0       
[52] cellranger_1.1.0     tools_4.2.0          cli_3.6.2           
[55] generics_0.1.3       evaluate_0.23        fastmap_1.1.1       
[58] yaml_2.3.7           ModelMetrics_1.2.2.2 knitr_1.45.8        
[61] fs_1.6.3             s2_1.1.0             xml2_1.3.3          
[64] compiler_4.2.0       rstudioapi_0.14      e1071_1.7-11        
[67] reprex_2.0.2         stringi_1.8.2        classInt_0.4-8      
[70] nloptr_2.0.3         vctrs_0.6.5          pillar_1.9.0        
[73] lifecycle_1.0.4      data.table_1.14.10   R6_2.5.1            
[76] renv_1.0.5           KernSmooth_2.23-20   parallelly_1.32.1   
[79] codetools_0.2-18     boot_1.3-28          MASS_7.3-58.1       
[82] rprojroot_2.0.4      withr_2.5.2          hms_1.1.3           
[85] rpart_4.1.16         timeDate_4021.106    class_7.3-20        
[88] minqa_1.2.6          googledrive_2.0.0    sf_1.0-12           
[91] pROC_1.18.0         
> 
> proc.time()
     user    system   elapsed 
 9383.998   424.489 67169.703 
