
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #######################################
> # WASH Benefits Bangladesh  
> # Hydrometeorological risk factors for diarrhea and enteropathogens
> 
> # Script to plot Figure 1 from manuscript 
> # Map of Bangladesh with seasonal diarrhea prevalence  
> #######################################
> 
> rm(list=ls())
> 
> source(paste0(here::here(), "/0-config.R"))
here() starts at /Users/JGrembi/Dropbox/08_JadeCollaboration/wbb-weather-diarrhea-enteropathogens

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: ggplot2

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths


Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

Welcome to the washb package
Version: 0.2.2
Created on 2018-11-07

This software was developed with funding from the
Bill & Melinda Gates Foundation (grant number OPPGD759).

The package's reference manual and vignette are also online:
https://ben-arnold.github.io/washb


Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-40. For overview type 'help("mgcv-package")'.
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading required package: lme4

Attaching package: ‘lme4’

The following object is masked from ‘package:nlme’:

    lmList

This is gamm4 0.2-6

This is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')
Loading required package: viridisLite
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift


Attaching package: ‘wrapr’

The following objects are masked from ‘package:Matrix’:

    pack, unpack

The following object is masked from ‘package:mgcv’:

    %.%

The following objects are masked from ‘package:tidyr’:

    pack, unpack

The following object is masked from ‘package:dplyr’:

    coalesce

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
✔ tibble  3.2.1     ✔ forcats 0.5.2
✔ readr   2.1.3     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ wrapr::coalesce()        masks dplyr::coalesce()
✖ nlme::collapse()         masks dplyr::collapse()
✖ gridExtra::combine()     masks dplyr::combine()
✖ lubridate::date()        masks base::date()
✖ Matrix::expand()         masks tidyr::expand()
✖ dplyr::filter()          masks stats::filter()
✖ tibble::has_name()       masks assertthat::has_name()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ caret::lift()            masks purrr::lift()
✖ wrapr::pack()            masks Matrix::pack(), tidyr::pack()
✖ lubridate::setdiff()     masks base::setdiff()
✖ lubridate::union()       masks base::union()
✖ wrapr::unpack()          masks Matrix::unpack(), tidyr::unpack()
✖ tibble::view()           masks wrapr::view()

Attaching package: ‘kableExtra’

The following object is masked from ‘package:dplyr’:

    group_rows

Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: rngtools

Attaching package: ‘magrittr’

The following object is masked from ‘package:purrr’:

    set_names

The following object is masked from ‘package:tidyr’:

    extract


Attaching package: ‘cowplot’

The following object is masked from ‘package:lubridate’:

    stamp

> library(bangladesh)
> library(patchwork)

Attaching package: ‘patchwork’

The following object is masked from ‘package:cowplot’:

    align_plots

> library(ggspatial)
> 
> 
> p = readRDS(paste0(box_data_path, clean_diarr_merged_box)) 
> 
> p_gps = p %>% filter(!is.na(qgpslong)) %>% # drop missing ll
+   filter(intervention == 0) %>% # filter to only control HHs
+   mutate(date_trim = floor_date(as.Date(date), "month"),
+          year = floor_date(as.Date(date), "year")) # convert date to datetime and change dates to first of each month
> 
> plotdf_season = p_gps %>%
+   mutate(svy_year = factor(case_when(
+     date < as.Date("2013-07-31", format = "%Y-%m-%d", origin="1970-01-01") ~ "May 2012- July 2013",
+     (date > as.Date("2013-07-31", format = "%Y-%m-%d", origin="1970-01-01") & date < as.Date("2014-10-01", format = "%Y-%m-%d", origin="1970-01-01")) ~ "Sept 2013 - Sept 2014",
+     date > as.Date(2014-10-01, format = "%Y-%m-%d", origin="1970-01-01") ~ "Nov 2014 - Mar 2016"
+   ), levels = c("May 2012- July 2013", "Sept 2013 - Sept 2014", "Nov 2014 - Mar 2016")),
+   season = factor(season, levels = c("dry", "rainy"), labels = c("Dry", "Rainy"))) %>%
+   group_by(clusterid, season) %>%
+   summarise(cluster_mean = mean(as.numeric(as.character(diar7d)), na.rm = T) * 100,
+             mean_lat = mean(qgpslat),
+             mean_long = mean(qgpslong), 
+             n = n()) %>%
+   mutate(cluster_mean_bin = cut(cluster_mean,
+                                 breaks = c(0, 10, 20, 50, 100),
+                                 right  = T,
+                                 include.lowest = T,
+                                 labels = c("0-10", "11-20", "21-50", "51-100"),
+                                 ordered_result = T)) 
`summarise()` has grouped output by 'clusterid'. You can override using the
`.groups` argument.
> 
> 
> table(plotdf_season$cluster_mean_bin, useNA="ifany")

  0-10  11-20  21-50 51-100 
   641    101     73     11 
> 
> ##################################################################################
> # Get GPS Coordinates of Bangladesh District and Division boundaries, and Dhaka city
> ##################################################################################
> district_keep <- c("Mymensingh", "Gazipur", "Tangail", "Kishoreganj")
> district <- get_map("district") %>%
+   mutate(District = ifelse(District %in% district_keep, as.character(District), NA))
> division_map <- get_map("division")
> dhaka = data.frame(lat = 23.8103, long = 90.4125, label = "Dhaka")
> 
> ##################################################################################
> # Plot zoomed out map of Bangladesh with study area highlighted
> ##################################################################################
> (BD_map <-
+    ggplot(data = district) +
+    geom_sf(fill = "grey95") +
+    geom_sf(data = division_map, linewidth = .6, fill = NA) +
+    ggtitle("A)") + 
+    ggstar::geom_star(data = dhaka, mapping = aes(x = long, y = lat, group = NA), 
+                      starshape = 1, 
+                      size = 3,
+                      color = "#2166AC", 
+                      fill = "#2166AC") +
+    geom_segment(aes(y = 23.7, yend = 23.7, x = 89.8, xend = 91.1), lineend = "square") + 
+    geom_segment(aes(y = 25, yend = 25, x = 89.8, xend = 91.1),  lineend = "square") + 
+    geom_segment(aes(y = 23.7, yend = 25, x = 89.8, xend = 89.8),  lineend = "square") + 
+    geom_segment(aes(y = 23.7, yend = 25, x = 91.1, xend = 91.1),  lineend = "square") + 
+    labs(x = "", y = "") +
+    annotation_scale(height= unit(0.01, "cm"), pad_y = unit(0.8, "cm")) +
+    theme_bw() + 
+    theme(panel.border = element_blank(), 
+          panel.grid.major = element_blank(),     
+          panel.grid.minor = element_blank(), 
+          plot.title = element_text(vjust = -11),
+          axis.line = element_blank(),
+          axis.text = element_blank(), 
+          axis.ticks = element_blank(), 
+          plot.margin = unit(c(0, 0, 0, 0), "cm")))
>          
> ##################################################################################
> # Plot diarrhea prevalence by season
> ##################################################################################
> my.palette <- viridis(n=5, option = "B",
+                       end = 0.9,
+                       direction = -1)
> 
> 
> (BD_map_zoom <-
+     ggplot(data = district) +
+     geom_sf(fill = "grey95") +
+     geom_sf(data = division_map, linewidth = .7, fill = NA) +
+     geom_sf_text(aes(label = District)) +
+     xlim(89.87, 91.08) + ylim(23.78, 24.96) +
+     ggstar::geom_star(data = dhaka, mapping = aes(x = long, y = lat, group = NA), 
+                       starshape = 1, 
+                       color = "#2166AC", 
+                       fill = "#2166AC", 
+                       size = 3) +
+     labs(x = "", y = "", color = "Diarrhea prevalence (%)") +
+     theme_bw() + 
+     ggtitle("B)") + 
+     theme(panel.grid.major = element_blank(),     
+           panel.grid.minor = element_blank(), 
+           plot.title = element_text(vjust = -8.9, hjust = -0.025),
+           axis.line = element_blank(),
+           axis.text = element_blank(), 
+           axis.ticks = element_blank(), 
+           strip.background =element_rect(fill=NA),
+           strip.placement = NULL,
+           legend.position = "top",
+           legend.margin = margin(0, 0, -1, 0, "cm"),
+           plot.margin = unit(c(0, 0, 0, -0.5), "cm")) + 
+     geom_point(data = plotdf_season, 
+                mapping = aes(x = mean_long, y = mean_lat, group = NULL, color = cluster_mean_bin),
+                size = 1.3,
+                alpha = 0.7,
+                shape = 16) + 
+     facet_wrap(~season, ncol = 2) + 
+     scale_color_manual(values = my.palette) + 
+     annotation_scale(height= unit(0.01, "cm")) +
+     guides(color = guide_legend(override.aes = list(size=3))))
Warning messages:
1: In st_point_on_surface.sfc(sf::st_zm(x)) :
  st_point_on_surface may not give correct results for longitude/latitude data
2: In st_point_on_surface.sfc(sf::st_zm(x)) :
  st_point_on_surface may not give correct results for longitude/latitude data
3: Removed 120 rows containing missing values (`geom_text()`). 
4: Removed 1 rows containing missing values (`geom_point()`). 
> 
> 
> (all_maps = BD_map | BD_map_zoom)
Warning messages:
1: In st_point_on_surface.sfc(sf::st_zm(x)) :
  st_point_on_surface may not give correct results for longitude/latitude data
2: In st_point_on_surface.sfc(sf::st_zm(x)) :
  st_point_on_surface may not give correct results for longitude/latitude data
3: Removed 120 rows containing missing values (`geom_text()`). 
4: Removed 1 rows containing missing values (`geom_point()`). 
> 
> ggsave(paste0(fig_dir, "1-diarrhea_map_seasons.tiff"), all_maps, height = 5, width = 10)
Warning messages:
1: In st_point_on_surface.sfc(sf::st_zm(x)) :
  st_point_on_surface may not give correct results for longitude/latitude data
2: In st_point_on_surface.sfc(sf::st_zm(x)) :
  st_point_on_surface may not give correct results for longitude/latitude data
3: Removed 120 rows containing missing values (`geom_text()`). 
4: Removed 1 rows containing missing values (`geom_point()`). 
> 
> #--------------------------------------
> # Capture session info
> #--------------------------------------
> sessionInfo()
R version 4.2.0 (2022-04-22)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur/Monterey 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  grid      stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] ggspatial_1.1.9    patchwork_1.1.2    bangladesh_1.0.0   cowplot_1.1.1     
 [5] MetBrewer_0.2.0    RColorBrewer_1.1-3 rcartocolor_2.0.0  broom_1.0.5       
 [9] magrittr_2.0.3     doRNG_1.8.2        rngtools_1.5.2     doParallel_1.0.17 
[13] iterators_1.0.14   foreach_1.5.2      tictoc_1.1         rmarkdown_2.25    
[17] kableExtra_1.3.4   forcats_0.5.2      readr_2.1.3        tibble_3.2.1      
[21] tidyverse_1.3.2    pgirmess_2.0.0     wrapr_2.0.9        caret_6.0-93      
[25] lattice_0.20-45    viridis_0.6.4      viridisLite_0.4.2  purrr_1.0.2       
[29] DHARMa_0.4.6       gamm4_0.2-6        lme4_1.1-35.1      Matrix_1.6-4      
[33] mgcv_1.8-40        nlme_3.1-160       assertthat_0.2.1   boxr_0.3.6        
[37] ncdf4_1.19         stringr_1.5.1      lubridate_1.8.0    washb_0.2.2       
[41] gridExtra_2.3      reshape2_1.4.4     tidyr_1.3.0        ggcorrplot_0.1.4  
[45] ggplot2_3.4.4      dplyr_1.1.4        here_1.0.1        

loaded via a namespace (and not attached):
  [1] readxl_1.4.3         backports_1.4.1      lwgeom_0.2-11       
  [4] systemfonts_1.0.4    plyr_1.8.9           sp_1.5-0            
  [7] splines_4.2.0        crosstalk_1.2.1      leaflet_2.1.1       
 [10] listenv_0.8.0        digest_0.6.33        htmltools_0.5.7     
 [13] fansi_1.0.6          googlesheets4_1.0.1  tzdb_0.3.0          
 [16] recipes_1.0.2        globals_0.16.1       modelr_0.1.9        
 [19] gower_1.0.0          svglite_2.1.0        hardhat_1.2.0       
 [22] colorspace_2.1-0     rvest_1.0.3          textshaping_0.3.6   
 [25] leafem_0.2.0         haven_2.5.1          xfun_0.41           
 [28] crayon_1.5.2         jsonlite_1.8.8       survival_3.4-0      
 [31] glue_1.6.2           stars_0.6-0          gtable_0.3.4        
 [34] gargle_1.2.1         ipred_0.9-13         webshot_0.5.4       
 [37] future.apply_1.9.1   abind_1.4-5          scales_1.3.0        
 [40] DBI_1.1.3            Rcpp_1.0.11          spData_2.2.0        
 [43] units_0.8-0          ggstar_1.0.4         spdep_1.2-7         
 [46] proxy_0.4-27         stats4_4.2.0         lava_1.6.10         
 [49] prodlim_2019.11.13   htmlwidgets_1.6.4    httr_1.4.7          
 [52] wk_0.7.0             farver_2.1.1         XML_3.99-0.11       
 [55] pkgconfig_2.0.3      nnet_7.3-18          dbplyr_2.2.1        
 [58] deldir_1.0-6         utf8_1.2.4           tmaptools_3.1-1     
 [61] tidyselect_1.2.0     rlang_1.1.2          munsell_0.5.0       
 [64] cellranger_1.1.0     tools_4.2.0          cli_3.6.2           
 [67] generics_0.1.3       evaluate_0.23        fastmap_1.1.1       
 [70] ragg_1.2.3           leafsync_0.1.0       ModelMetrics_1.2.2.2
 [73] knitr_1.45.8         fs_1.6.3             s2_1.1.0            
 [76] future_1.28.0        xml2_1.3.3           compiler_4.2.0      
 [79] rstudioapi_0.14      png_0.1-7            e1071_1.7-11        
 [82] reprex_2.0.2         stringi_1.8.2        classInt_0.4-8      
 [85] nloptr_2.0.3         vctrs_0.6.5          pillar_1.9.0        
 [88] lifecycle_1.0.4      data.table_1.14.10   raster_3.6-3        
 [91] R6_2.5.1             KernSmooth_2.23-20   parallelly_1.32.1   
 [94] codetools_0.2-18     dichromat_2.0-0.1    boot_1.3-28         
 [97] MASS_7.3-58.1        rprojroot_2.0.4      withr_2.5.2         
[100] hms_1.1.3            terra_1.6-17         rpart_4.1.16        
[103] timeDate_4021.106    class_7.3-20         minqa_1.2.6         
[106] googledrive_2.0.0    tmap_3.3-3           sf_1.0-12           
[109] pROC_1.18.0          base64enc_0.1-3     
> 
> proc.time()
   user  system elapsed 
 16.037   1.496  19.276 
