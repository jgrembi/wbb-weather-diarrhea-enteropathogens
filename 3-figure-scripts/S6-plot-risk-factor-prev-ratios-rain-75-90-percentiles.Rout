
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #######################################
> # WASH Benefits Bangladesh  
> # Hydrometeorological risk factors for diarrhea and enteropathogens
> 
> # Script to plot forest plots of pathogens, diarrhea, and precipitation 
> # using 75th and 90th percentile cutoffs with different lags
> 
> # Adjusted models
> #######################################
> rm(list=ls())
> source(paste0(here::here(),"/0-config.R"))
here() starts at /Users/JGrembi/Dropbox/08_JadeCollaboration/wbb-weather-diarrhea-enteropathogens

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: ggplot2

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths


Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

Welcome to the washb package
Version: 0.2.2
Created on 2018-11-07

This software was developed with funding from the
Bill & Melinda Gates Foundation (grant number OPPGD759).

The package's reference manual and vignette are also online:
https://ben-arnold.github.io/washb


Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-40. For overview type 'help("mgcv-package")'.
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading required package: lme4

Attaching package: ‘lme4’

The following object is masked from ‘package:nlme’:

    lmList

This is gamm4 0.2-6

This is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')
Loading required package: viridisLite
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift


Attaching package: ‘wrapr’

The following objects are masked from ‘package:Matrix’:

    pack, unpack

The following object is masked from ‘package:mgcv’:

    %.%

The following objects are masked from ‘package:tidyr’:

    pack, unpack

The following object is masked from ‘package:dplyr’:

    coalesce

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
✔ tibble  3.2.1     ✔ forcats 0.5.2
✔ readr   2.1.3     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ wrapr::coalesce()        masks dplyr::coalesce()
✖ nlme::collapse()         masks dplyr::collapse()
✖ gridExtra::combine()     masks dplyr::combine()
✖ lubridate::date()        masks base::date()
✖ Matrix::expand()         masks tidyr::expand()
✖ dplyr::filter()          masks stats::filter()
✖ tibble::has_name()       masks assertthat::has_name()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ caret::lift()            masks purrr::lift()
✖ wrapr::pack()            masks Matrix::pack(), tidyr::pack()
✖ lubridate::setdiff()     masks base::setdiff()
✖ lubridate::union()       masks base::union()
✖ wrapr::unpack()          masks Matrix::unpack(), tidyr::unpack()
✖ tibble::view()           masks wrapr::view()

Attaching package: ‘kableExtra’

The following object is masked from ‘package:dplyr’:

    group_rows

Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: rngtools

Attaching package: ‘magrittr’

The following object is masked from ‘package:purrr’:

    set_names

The following object is masked from ‘package:tidyr’:

    extract


Attaching package: ‘cowplot’

The following object is masked from ‘package:lubridate’:

    stamp

> 
> # read in results --------------------------------------------------
> prev_table = readRDS(paste0(data_dir, "corrected_PR_tables_nointeraction.RDS"))
> 
> drop_ecoli <- c("LT-ETEC", "ST-ETEC", "aEPEC", "tEPEC")
> 
> adj = prev_table %>%
+   filter(Group == "Adj.", grepl("ppt_week_sum", risk_factor), grepl("percentile", RF_Type), ! grepl("Bruising", Outcome)) %>% 
+   filter(!Outcome %in% drop_ecoli) %>%
+   mutate(risk_factor = factor(risk_factor, 
+                               levels = c(
+                                 "ppt_week_sum_3weeklag_75",
+                                 "ppt_week_sum_2weeklag_75",
+                                 "ppt_week_sum_1weeklag_75",
+                                 "ppt_week_sum_0weeklag_75",
+                                 "ppt_week_sum_3weeklag_90",
+                                 "ppt_week_sum_2weeklag_90",
+                                 "ppt_week_sum_1weeklag_90",
+                                 "ppt_week_sum_0weeklag_90"))) %>% 
+   mutate(category = case_when(
+     outcome_name == "diar7d" ~ "Diarrhea",
+     outcome_name == "pos_Adenovirus40_41" ~ "Virus",
+     outcome_name == "pos_aEPEC" ~ "Bacteria",
+     outcome_name == "pos_Aeromonas" ~ "Bacteria",
+     outcome_name == "pos_B.fragilis" ~ "Bacteria",
+     outcome_name == "pos_C.difficile" ~ "Bacteria",
+     outcome_name == "pos_Campylobacter" ~ "Bacteria",
+     outcome_name == "pos_Cryptosporidium" ~ "Parasite",
+     outcome_name == "pos_E.bieneusi" ~ "Parasite",
+     outcome_name == "pos_EAEC" ~ "Bacteria",
+     outcome_name == "pos_EPEC_any" ~ "Bacteria",
+     outcome_name == "pos_ETEC_any" ~ "Bacteria",
+     outcome_name == "pos_Giardia" ~ "Parasite",
+     outcome_name == "pos_LT_ETEC" ~ "Bacteria",
+     outcome_name == "pos_Norovirus" ~ "Virus",
+     outcome_name == "pos_parasite" ~ "Parasite",
+     outcome_name == "pos_Plesiomonas" ~ "Bacteria",
+     outcome_name == "pos_Sapovirus" ~ "Virus",
+     outcome_name == "pos_Shigella_EIEC" ~ "Bacteria",
+     outcome_name == "pos_ST_ETEC" ~ "Bacteria",
+     outcome_name == "pos_STEC" ~ "Bacteria",
+     outcome_name == "pos_tEPEC" ~ "Bacteria",
+     outcome_name == "pos_virus" ~ "Virus"
+   ),
+   expected_lag = case_when(
+     outcome_name %in% c("pos_Cryptosporidium", "pos_E.bieneusi", "pos_Giardia") ~ "2-week lag",
+     outcome_name %in% c("diar7d", "pos_parasite", "pos_virus") ~ "NA",
+     TRUE ~ "1-week lag"
+   ),
+   lag = factor(case_when(
+     grepl("0weeklag", risk_factor) ~ "0-week lag",
+     grepl("1weeklag", risk_factor)  ~ "1-week lag",
+     grepl("2weeklag", risk_factor) ~ "2-week lag",
+     grepl("3weeklag", risk_factor) ~ "3-week lag",
+   ), levels = c("3-week lag", "2-week lag", "1-week lag", "0-week lag")),
+   expected_lag_sym = ifelse(lag == expected_lag | outcome_name %in% c("pos_virus", "pos_parasite"), "Yes", "No"))
> 
> 
> diar_plot <- ggplot(adj %>% filter(category=="Diarrhea") %>% mutate(Outcome = "7-day Diarrhea"), aes(x=Outcome, y=PR)) +
+   geom_hline(yintercept=1) +
+   geom_pointrange(aes(y = PR, ymin = PR.Lower, ymax=PR.Upper, shape = expected_lag_sym, fill=risk_factor, color=risk_factor, group = risk_factor), position = position_dodge(.5)) +
+   xlab("Diarrhea") +
+   ylab("Prevalence Ratio (95% CI)") +
+   coord_flip() +
+   scale_x_discrete(labels = c("diarrhea-0" = "Diarrhea")) +
+   scale_colour_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#955b13","#c77919", "#f99820"), 
+                       labels=c("3-week lag  (75th percentile cutoff)", "2-week lag", "1-week lag",  "3-week lag  (90th percentile cutoff)", "2-week lag", "1-week lag")) +
+   scale_fill_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#955b13","#c77919", "#f99820"), 
+                     labels=c("3-week lag", "2-week lag", "1-week lag", "3-week lag", "2-week lag", "1-week lag"), guide = "none") +
+   scale_shape_manual(values = c(21,1)) +
+   scale_y_continuous(trans="log", breaks = c(0.25, 0.5, 1, 1.5, 2, 3, 4), 
+                      labels=c(0.25, 0.5, 1, 1.5, 2, 3, 4),
+                      limits = c(0.15, 5.25)) +
+   theme_bw() +
+   theme(legend.position = "none",
+         axis.text.y = element_text(size = 12),
+         axis.title = element_blank(),
+         axis.text.x = element_blank(),
+         axis.ticks.x = element_blank(),
+         plot.title = element_text(size = 15)) +
+   ggtitle(label = "A) Diarrhea")
> 
> (parasite_plot <- ggplot(adj %>% filter(category=="Parasite") %>% arrange(lag), aes(x=Outcome, y=PR)) +
+   geom_hline(yintercept=1) +
+   geom_pointrange(aes(y = PR, ymin = PR.Lower, ymax=PR.Upper, shape = expected_lag_sym, fill=risk_factor, color=risk_factor, group = risk_factor), position = position_dodge(.65)) +
+   ylab("Prevalence Ratio (95% CI)") +
+   coord_flip() +
+   scale_x_discrete(labels = c("Any Parasite" = "Any parasite", "E. bieneusi" = expression(italic("E. bieneusi")), 
+                               "Giardia" = expression(italic("Giardia")), "Cryptosporidium" = expression(italic("Cryptosporidium"))), 
+                    limits = c("Any Parasite", "Giardia", "E. bieneusi", "Cryptosporidium")) +
+   scale_colour_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                       labels=c("3-week lag  (75th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag", "3-week lag  (90th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag")) +
+   scale_fill_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                     labels=c("3-week lag", "2-week lag", "1-week lag", "0-week lag", "3-week lag", "2-week lag", "1-week lag", "0-week lag"), guide = "none") +
+   scale_shape_manual(values = c(1,21)) +
+   scale_y_continuous(trans="log", breaks = c(0.25, 0.5, 1, 1.5, 2, 3, 4), 
+                      labels=c(0.25, 0.5, 1, 1.5, 2, 3, 4),
+                      limits = c(0.15, 5.25)) +
+   theme_bw() +
+   theme(legend.position = "none",
+         axis.text.y = element_text(size = 12),
+         axis.title = element_blank(),
+         axis.text.x = element_blank(),
+         axis.ticks.x = element_blank(),
+         plot.title = element_text(size = 15)) + 
+   ggtitle(label = "B) Parasites"))
> 
> (virus_plot <- ggplot(adj %>% filter(category=="Virus")) +
+   geom_hline(yintercept=1) +
+   geom_pointrange(aes(x=Outcome, y=PR, ymin = PR.Lower, ymax=PR.Upper, shape = expected_lag_sym, fill=risk_factor, color=risk_factor, group = risk_factor), position = position_dodge(.65)) +
+   ylab("Prevalence Ratio (95% CI)") +
+   coord_flip() +
+   scale_x_discrete(limits = c("Any Virus", "Sapovirus", "Norovirus", "Adenovirus 40/41")) +
+   scale_colour_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                       labels=c("3-week lag  (75th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag", "3-week lag  (90th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag")) +
+   scale_fill_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                     labels=c("3-week lag", "2-week lag", "1-week lag", "0-week lag", "3-week lag", "2-week lag", "1-week lag", "0-week lag"), guide = "none") +
+   scale_shape_manual(values = c(1,21)) +
+   scale_y_continuous(trans="log", breaks = c(0.25, 0.5, 1, 1.5, 2, 3, 4), 
+                      labels=c(0.25, 0.5, 1, 1.5, 2, 3, 4),
+                      limits = c(0.15, 5.25)) +
+   theme_bw() +
+   theme(legend.position = "none",
+         axis.text.y = element_text(size = 12),
+         axis.text.x = element_text(size = 12),
+         axis.title.y = element_blank(),
+         plot.title = element_text(size = 15)) + 
+   ggtitle(label = "C) Viruses"))
> 
> (bacteria_plot <- ggplot(adj %>% filter(category=="Bacteria")) +
+     geom_hline(yintercept=1) +
+     geom_pointrange(aes(x=Outcome, y=PR, ymin = PR.Lower, ymax=PR.Upper, shape = expected_lag_sym, fill=risk_factor, color=risk_factor, group = risk_factor), position = position_dodge(.65)) +
+     ylab("Prevalence Ratio (95% CI)") +
+     coord_flip() +
+     scale_x_discrete(labels = c("STEC" = "STEC", "EAEC" = "EAEC", "ETEC" = "ETEC", "EPEC" = "EPEC",
+                                 "Campylobacter" = expression(italic("Campylobacter")),
+                                 "Plesiomonas" = expression(italic("Plesiomonas")),
+                                 "Shigella/EIEC" = expression(paste(italic("Shigella"), "/EIEC")),
+                                 "C. difficile" = expression(italic("C. difficile")),
+                                 "B. fragilis" = expression(italic("B. fragilis")),
+                                 "Aeromonas" = expression(italic("Aeromonas"))),
+                      limits = c("STEC", "ETEC", "EPEC", "EAEC", "Shigella/EIEC", "Plesiomonas", 
+                                 "C. difficile", "Campylobacter", "B. fragilis", "Aeromonas")) +
+   scale_colour_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                       labels=c("3-week lag  (75th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag", "3-week lag  (90th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag")) +
+   scale_fill_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                     labels=c("3-week lag", "2-week lag", "1-week lag", "0-week lag", "3-week lag", "2-week lag", "1-week lag", "0-week lag"), guide = "none") +
+   scale_shape_manual(values = c(1,21)) +
+   scale_y_continuous(trans="log", breaks = c(0.25, 0.5, 0.75, 1, 1.5, 2, 3, 4), 
+                      labels=c(0.25, 0.5, 0.75, 1, 1.5, 2, 3, 4),
+                      limits = c(0.25, 6.25)) +
+   theme_bw() +
+   theme(legend.position = "none",
+         axis.text.y = element_text(size = 12),
+         axis.title.x = element_text(size = 12),
+         axis.title.y = element_blank(),
+         plot.title = element_text(size = 15)) +
+   ggtitle(label = "D) Bacteria"))
> 
> diar_para_vir <- plot_grid(diar_plot, parasite_plot, virus_plot, ncol = 1, nrow = 3, 
+                            rel_heights = c(2, 5, 5), rel_widths = (c(1, 1, 1)), align = "hv")
> 
> all_disease <- grid.arrange(diar_para_vir, bacteria_plot, ncol = 2, nrow = 1)
> 
> legend_plot <- ggplot(adj %>% filter(category=="Bacteria"), aes(x=Outcome, y=PR, shape = expected_lag_sym, fill=risk_factor, color=risk_factor, group = risk_factor)) +
+   geom_hline(yintercept=1) +
+   geom_pointrange(aes(ymin = PR.Lower, ymax=PR.Upper), position = position_dodge(.5)) +
+   xlab("Diarrhea") +
+   ylab("Prevalence Ratio (95% CI)") +
+   coord_flip() +
+   scale_colour_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                       labels=c("3-week lag  (75th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag", "3-week lag  (90th percentile cutoff)", "2-week lag", "1-week lag", "0-week lag")) +
+   scale_fill_manual(values = c("#024d81",  "#317cb0","#60a6d6", "#97ccf0", "#955b13","#c77919", "#f99820", "#faac4c"), 
+                     labels=c("3-week lag", "2-week lag", "1-week lag", "0-week lag", "3-week lag", "2-week lag", "1-week lag", "0-week lag"), guide = "none") +
+   scale_shape_manual(values = c(21,19), 
+                      labels = c("Less important", "Most relevant")) +
+   scale_y_continuous(trans="log", breaks = c(0.25, 0.5, 1, 1.5, 2,  3, 4), 
+                      labels=c(0.25, 0.5, 1, 1.5, 2, 3, 4),
+                      limits = c(0.25, 5.25)) +
+   guides(shape = guide_legend(title = "Expected Lag Period Relevance", reverse = T),
+          color = guide_legend(title = "Weekly Sum of Precipitation\n Above vs. Below Cutoff", reverse = T, order = 1, nrow = 2, byrow=TRUE)) +
+   theme_bw() +
+   theme(legend.position = "bottom",
+         legend.box="vertical",
+         legend.spacing.y = unit(-0.15, "cm"),
+         legend.title = element_text(size = 14),
+         legend.text = element_text(size = 12),
+         plot.title = element_text(size = 10)) + 
+   ggtitle(label = "Legend")
> 
> legend <- get_legend(legend_plot)
> (combined_plot <- grid.arrange(all_disease, legend, heights = c(1, .15)))
TableGrob (2 x 1) "arrange": 2 grobs
  z     cells    name              grob
1 1 (1-1,1-1) arrange   gtable[arrange]
2 2 (2-2,1-1) arrange gtable[guide-box]
> 
> ggsave(combined_plot, filename = paste0(fig_dir, "S6-plot-precipitation-binary-75-90-percentiles.tiff"), 
+        width = 12, height = 14)
> 
> #--------------------------------------
> # Capture session info
> #--------------------------------------
> sessionInfo()
R version 4.2.0 (2022-04-22)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur/Monterey 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  grid      stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] cowplot_1.1.1      MetBrewer_0.2.0    RColorBrewer_1.1-3 rcartocolor_2.0.0 
 [5] broom_1.0.5        magrittr_2.0.3     doRNG_1.8.2        rngtools_1.5.2    
 [9] doParallel_1.0.17  iterators_1.0.14   foreach_1.5.2      tictoc_1.1        
[13] rmarkdown_2.25     kableExtra_1.3.4   forcats_0.5.2      readr_2.1.3       
[17] tibble_3.2.1       tidyverse_1.3.2    pgirmess_2.0.0     wrapr_2.0.9       
[21] caret_6.0-93       lattice_0.20-45    viridis_0.6.4      viridisLite_0.4.2 
[25] purrr_1.0.2        DHARMa_0.4.6       gamm4_0.2-6        lme4_1.1-35.1     
[29] Matrix_1.6-4       mgcv_1.8-40        nlme_3.1-160       assertthat_0.2.1  
[33] boxr_0.3.6         ncdf4_1.19         stringr_1.5.1      lubridate_1.8.0   
[37] washb_0.2.2        gridExtra_2.3      reshape2_1.4.4     tidyr_1.3.0       
[41] ggcorrplot_0.1.4   ggplot2_3.4.4      dplyr_1.1.4        here_1.0.1        

loaded via a namespace (and not attached):
 [1] readxl_1.4.3         backports_1.4.1      systemfonts_1.0.4   
 [4] plyr_1.8.9           sp_1.5-0             splines_4.2.0       
 [7] listenv_0.8.0        digest_0.6.33        htmltools_0.5.7     
[10] fansi_1.0.6          googlesheets4_1.0.1  tzdb_0.3.0          
[13] recipes_1.0.2        globals_0.16.1       modelr_0.1.9        
[16] gower_1.0.0          svglite_2.1.0        hardhat_1.2.0       
[19] colorspace_2.1-0     rvest_1.0.3          textshaping_0.3.6   
[22] haven_2.5.1          xfun_0.41            crayon_1.5.2        
[25] jsonlite_1.8.8       survival_3.4-0       glue_1.6.2          
[28] gtable_0.3.4         gargle_1.2.1         ipred_0.9-13        
[31] webshot_0.5.4        future.apply_1.9.1   scales_1.3.0        
[34] DBI_1.1.3            Rcpp_1.0.11          spData_2.2.0        
[37] units_0.8-0          spdep_1.2-7          proxy_0.4-27        
[40] stats4_4.2.0         lava_1.6.10          prodlim_2019.11.13  
[43] httr_1.4.7           wk_0.7.0             farver_2.1.1        
[46] pkgconfig_2.0.3      nnet_7.3-18          dbplyr_2.2.1        
[49] deldir_1.0-6         utf8_1.2.4           tidyselect_1.2.0    
[52] rlang_1.1.2          munsell_0.5.0        cellranger_1.1.0    
[55] tools_4.2.0          cli_3.6.2            generics_0.1.3      
[58] evaluate_0.23        fastmap_1.1.1        ragg_1.2.3          
[61] ModelMetrics_1.2.2.2 knitr_1.45.8         fs_1.6.3            
[64] s2_1.1.0             future_1.28.0        xml2_1.3.3          
[67] compiler_4.2.0       rstudioapi_0.14      e1071_1.7-11        
[70] reprex_2.0.2         stringi_1.8.2        classInt_0.4-8      
[73] nloptr_2.0.3         vctrs_0.6.5          pillar_1.9.0        
[76] lifecycle_1.0.4      data.table_1.14.10   R6_2.5.1            
[79] KernSmooth_2.23-20   parallelly_1.32.1    codetools_0.2-18    
[82] boot_1.3-28          MASS_7.3-58.1        rprojroot_2.0.4     
[85] withr_2.5.2          hms_1.1.3            rpart_4.1.16        
[88] timeDate_4021.106    class_7.3-20         minqa_1.2.6         
[91] googledrive_2.0.0    sf_1.0-12            pROC_1.18.0         
> 
> proc.time()
   user  system elapsed 
  7.165   0.806   8.680 
