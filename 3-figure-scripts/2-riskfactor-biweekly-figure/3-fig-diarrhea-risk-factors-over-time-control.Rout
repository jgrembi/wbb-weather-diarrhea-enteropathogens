
R version 4.2.0 (2022-04-22) -- "Vigorous Calisthenics"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #######################################
> # WASH Benefits Bangladesh  
> # Hydrometeorological risk factors for diarrhea and enteropathogens
> 
> # Fig. 2 - Diarrhea prevalence, and risk-factors over time
> # Raw data
> 
> # Note that scripts 1-2d in this directory must be run 
> # to generate the data files used in this script
> #######################################
> 
> rm(list=ls())
> 
> ## configure directories, load libraries and base functions
> source(paste0(here::here(), "/0-config.R"))
here() starts at /Users/JGrembi/Dropbox/08_JadeCollaboration/wbb-weather-diarrhea-enteropathogens

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

Loading required package: ggplot2

Attaching package: ‘reshape2’

The following object is masked from ‘package:tidyr’:

    smiths


Attaching package: ‘gridExtra’

The following object is masked from ‘package:dplyr’:

    combine

Welcome to the washb package
Version: 0.2.2
Created on 2018-11-07

This software was developed with funding from the
Bill & Melinda Gates Foundation (grant number OPPGD759).

The package's reference manual and vignette are also online:
https://ben-arnold.github.io/washb


Attaching package: ‘lubridate’

The following objects are masked from ‘package:base’:

    date, intersect, setdiff, union

Loading required package: nlme

Attaching package: ‘nlme’

The following object is masked from ‘package:dplyr’:

    collapse

This is mgcv 1.8-40. For overview type 'help("mgcv-package")'.
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading required package: lme4

Attaching package: ‘lme4’

The following object is masked from ‘package:nlme’:

    lmList

This is gamm4 0.2-6

This is DHARMa 0.4.6. For overview type '?DHARMa'. For recent changes, type news(package = 'DHARMa')
Loading required package: viridisLite
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:purrr’:

    lift


Attaching package: ‘wrapr’

The following objects are masked from ‘package:Matrix’:

    pack, unpack

The following object is masked from ‘package:mgcv’:

    %.%

The following objects are masked from ‘package:tidyr’:

    pack, unpack

The following object is masked from ‘package:dplyr’:

    coalesce

── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──
✔ tibble  3.2.1     ✔ forcats 0.5.2
✔ readr   2.1.3     
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ lubridate::as.difftime() masks base::as.difftime()
✖ wrapr::coalesce()        masks dplyr::coalesce()
✖ nlme::collapse()         masks dplyr::collapse()
✖ gridExtra::combine()     masks dplyr::combine()
✖ lubridate::date()        masks base::date()
✖ Matrix::expand()         masks tidyr::expand()
✖ dplyr::filter()          masks stats::filter()
✖ tibble::has_name()       masks assertthat::has_name()
✖ lubridate::intersect()   masks base::intersect()
✖ dplyr::lag()             masks stats::lag()
✖ caret::lift()            masks purrr::lift()
✖ wrapr::pack()            masks Matrix::pack(), tidyr::pack()
✖ lubridate::setdiff()     masks base::setdiff()
✖ lubridate::union()       masks base::union()
✖ wrapr::unpack()          masks Matrix::unpack(), tidyr::unpack()
✖ tibble::view()           masks wrapr::view()

Attaching package: ‘kableExtra’

The following object is masked from ‘package:dplyr’:

    group_rows

Loading required package: foreach

Attaching package: ‘foreach’

The following objects are masked from ‘package:purrr’:

    accumulate, when

Loading required package: iterators
Loading required package: parallel
Loading required package: rngtools

Attaching package: ‘magrittr’

The following object is masked from ‘package:purrr’:

    set_names

The following object is masked from ‘package:tidyr’:

    extract


Attaching package: ‘cowplot’

The following object is masked from ‘package:lubridate’:

    stamp

> 
> ## load temperature weekly means for all days, not just those with samples
> temp_alldays <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/temp_mean_3wklag_time_for_plot.RDS")) %>% 
+   mutate(N = NA, SD= NA, Robust.SE = NA, measure = "temp_weekavg_3weeklag") %>% 
+   select(biweek = date, N, Mean = temp_weekavg_3weeklag, SD, Robust.SE, 
+          Lower.95.CI = temp_weekavg_3weeklag_lb, Upper.95.CI = temp_weekavg_3weeklag_ub, measure)
> 
> ## load ppt weekly sums for all days, not just those with samples
> ppt_alldays <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/ppt_total_2wklag_time_for_plot.RDS")) %>% 
+   mutate(N = NA, SD= NA, Robust.SE = NA, measure = "ppt_week_sum_2weeklag") %>% 
+   select(biweek = date, N, Mean = ppt_total_2weeklag, SD, Robust.SE, 
+          Lower.95.CI = ppt_total_2weeklag_lb, Upper.95.CI = ppt_total_2weeklag_ub, measure)
> 
> ## load vpd for all days, not just those with samples
> vpd_alldays <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/mean_vpd_time_for_plot.RDS")) %>% 
+   mutate(N = NA, SD= NA, Robust.SE = NA, measure = "vpd") %>% 
+   select(biweek = date, N, Mean = mean_vpd, SD, Robust.SE, 
+          Lower.95.CI = mean_vpd_lb, Upper.95.CI = mean_vpd_ub, measure)
> 
> ## load distance from surface water for all days, not just those with samples
> dist_surface_water_alldays <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/mean_distance_from_any_surface_water_time_for_plot.RDS")) %>% 
+   mutate(N = NA, SD= NA, Robust.SE = NA, measure = "distance_from_any_surface_water") %>% 
+   select(biweek = date, N, Mean = distance_from_any_surface_water, SD, Robust.SE, 
+          Lower.95.CI = distance_from_any_surface_water_lb, Upper.95.CI = distance_from_any_surface_water_ub, measure)
> 
> ## load prop any surface water for all days, not just those with samples
> prop_any_surface_water_alldays <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/mean_prop_detected_any_surface_water_250_time_for_plot.RDS")) %>% 
+   mutate(N = NA, SD= NA, Robust.SE = NA, measure = "prop_detected_any_surface_water_250") %>% 
+   select(biweek = date, N, Mean = prop_detected_any_surface_water_250, SD, Robust.SE, 
+          Lower.95.CI = prop_detected_any_surface_water_250_lb, Upper.95.CI = prop_detected_any_surface_water_250_ub, measure)
> 
> ## load prop seasonal surface water for all days, not just those with samples
> prop_seasonal_surface_water_alldays <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/mean_prop_detected_seasonal_surface_water_250_time_for_plot.RDS")) %>% 
+   mutate(N = NA, SD= NA, Robust.SE = NA, measure = "prop_detected_seasonal_surface_water_250") %>% 
+   select(biweek = date, N, Mean = prop_detected_seasonal_surface_water_250, SD, Robust.SE, 
+          Lower.95.CI = prop_detected_seasonal_surface_water_250_lb, Upper.95.CI = prop_detected_seasonal_surface_water_250_ub, measure)
> 
> ## load prop ephemeral surface water for all days, not just those with samples
> prop_ephemeral_surface_water_alldays <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/mean_prop_detected_ephemeral_surface_water_250_time_for_plot.RDS")) %>% 
+   mutate(N = NA, SD= NA, Robust.SE = NA, measure = "prop_detected_ephemeral_surface_water_250") %>% 
+   select(biweek = date, N, Mean = prop_detected_ephemeral_surface_water_250, SD, Robust.SE, 
+          Lower.95.CI = prop_detected_ephemeral_surface_water_250_lb, Upper.95.CI = prop_detected_ephemeral_surface_water_250_ub, measure)
> 
> master_biweek <- readRDS(paste0(here::here(), "/data/biweekly_plot_data/master_biweek_dates.RDS"))
> 
> ## Read in diarrhea data and subset to intervention arms only.
> df_diar = readRDS(paste0(here::here(), "/data/biweekly_plot_data/d_diar_biweek.RDS"))
> 
> # Subset data.frame to diarrhea_1 (intervention arms pooled)
> d_diar = df_diar %>%
+   filter(intervention == 0) %>%
+   mutate(diar7d = as.numeric(as.character(diar7d)),
+          ym = floor_date(date, "month"),
+          yw = floor_date(date, "week"),
+          age_cat2 = factor(ifelse(aged < 365, "6mo-1yr", ifelse(aged >= 365 & aged < 730, "1-2yrs", ifelse(aged >= 730, "2+ yrs", "missing"))), 
+                            levels = c("6mo-1yr", "1-2yrs", "2+ yrs")),
+          personid = paste0(dataid, childid)) 
> 
> table(d_diar$age_cat2)

6mo-1yr  1-2yrs  2+ yrs 
   1688    2724    2908 
> table(d_diar$age_cat)

 <1.5yr 1.5-5yr 
   2745    4575 
> 
> length(unique(d_diar$personid))
[1] 4478
> 
> var_names = c("diar7d", 
+               "vpd", 
+               "temp_weekavg_1weeklag",
+               "temp_weekavg_2weeklag", 
+               "temp_weekavg_3weeklag",
+               "ppt_week_sum_0weeklag", 
+               "ppt_week_sum_1weeklag",
+               "ppt_week_sum_2weeklag", 
+               "ppt_week_sum_3weeklag", 
+               "prop_detected_any_surface_water_250",
+               "prop_detected_seasonal_surface_water_250",
+               "prop_detected_ephemeral_surface_water_250",
+               "prop_detected_permanent_water_250",
+               "distance_from_any_surface_water")
> 
> var_labs = c("7-day diarrhea prevalence (%)", 
+              "Vapor pressure deficit", 
+              "Average weekly temp (C) - 1 week lag",
+              "Average weekly temp (C) - 2 week lag", 
+              "Average weekly temp (C) - 3 week lag",
+              "Total weekly precipitation - 0 week lag", 
+              "Total weekly precipitation (mm) - 1 week lag",
+              "Total weekly precipitation (mm) - 2 week lag", 
+              "Total weekly precipitation (mm) - 3 week lag",
+              "Any surface water detected within 250m (%)",
+              "Seasonal surface water detected within 250m (%)",
+              "Ephemeral surface water detected within 250m (%)",
+              "Permanent water detected within 250m (%)",
+              "Distance from any surface water")
> 
> names(var_labs) = var_names
> 
> 
> # get bi weekly cluster means
> cluster_level_mean_by_week = d_diar %>%
+     group_by(biweek) %>%
+     summarise(data.frame(washb_mean(.data[["diar7d"]], id = .data$clusterid, print = F))) %>%
+     mutate(measure = "diar7d") %>%
+   mutate(Mean = ifelse(measure == "diar7d", Mean*100, Mean),
+          Upper.95.CI = ifelse(measure == "diar7d", Upper.95.CI*100, Upper.95.CI),
+          Lower.95.CI = ifelse(measure == "diar7d", Lower.95.CI*100, Lower.95.CI)) %>%
+   filter(biweek > "2012-07-21" & biweek < "2016-02-04") %>%
+   # drop sparse rows
+   filter(N>10) 

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

> 
> # merge against master bi-weekly dataframe 
> master_biweek_plot_diar <- master_biweek %>% ungroup() %>% 
+   filter(!biweek_date %in% unique(cluster_level_mean_by_week$biweek)) %>% 
+   dplyr::select(biweek_date) %>% 
+   rename(biweek = biweek_date) %>% 
+   mutate(N=NA, Mean=NA, SD=NA, Robust.SE=NA,
+          Lower.95.CI = NA, Upper.95.CI = NA, measure="diar7d")
> 
> 
> cluster_level_mean_by_week <- bind_rows(cluster_level_mean_by_week,
+                                         master_biweek_plot_diar,
+                                         temp_alldays, 
+                                         ppt_alldays,
+                                         vpd_alldays,
+                                         dist_surface_water_alldays,
+                                         prop_any_surface_water_alldays,
+                                         prop_seasonal_surface_water_alldays,
+                                         prop_ephemeral_surface_water_alldays) %>%
+   arrange(biweek)
> 
> 
> plot_dat <-cluster_level_mean_by_week %>%
+   filter(measure %in% c("diar7d", "ppt_week_sum_2weeklag","temp_weekavg_3weeklag",
+                         "vpd",
+                         "distance_from_any_surface_water")) %>% 
+   mutate(measure = factor(measure, levels = var_names)) 
> 
> ## Create sequential, lettered plot labels (adjust based on measures filtered, above)
> plot_labs = c("7-day diarrhea prevalence (%)",
+               "Monthly vapor pressure deficit (kPA)",
+              "Average weekly temp (C) - 3 week lag",
+              "Total weekly precipitation (mm) - 2 week lag",
+              "Distance from any surface water (m)")
> 
> plot_vars = c("diar7d",
+               "vpd",
+               "temp_weekavg_3weeklag",
+               "ppt_week_sum_2weeklag",
+               "distance_from_any_surface_water")
> 
> min_plot_dat <- min(plot_dat$biweek[!is.na(plot_dat$N)])
> max_plot_dat <- max(plot_dat$biweek[!is.na(plot_dat$N)])
> 
> label_function <- function(var_list){
+   letters <- LETTERS[1:length(var_list)]
+   paren <- ") "
+   labs <- vector()
+   for (i in 1:length(var_list)){
+     lab <- paste0(letters[i], paren, var_list[i])
+     labs <- append(labs, lab, after = length(labs))
+   }
+   return(labs)
+ }
> 
> labs <- label_function(plot_labs)
> names(labs) = plot_vars
> 
> 
> ## create dummy variable so n_plot_weekly can also have a facet label
> plot_dat <- plot_dat %>% mutate(n_color = "black")
> n_letter <- LETTERS[length(plot_vars) + 1] # n_plot will be last
> n_lab <- paste0(n_letter, ") ", "Number of diarrhea observations per time period")
> names(n_lab) = c("black")
> 
> ## define rainy season
> rainy_season_def = read.csv(paste0(data_dir,"/season_definitions.csv")) %>% 
+   select(-X) %>%
+   rename("year" = "season") %>%
+   mutate(season_start = as.Date(start),
+          season_end = as.Date(end))
> ## make plots
> rf_plot_weekly = ggplot(plot_dat, aes(x = biweek, y = Mean, color = measure)) +
+   geom_rect(data = rainy_season_def, inherit.aes = F, aes(xmin = season_start, xmax = season_end, ymin = -Inf, ymax = Inf), color = "grey85", alpha = 0.2) +
+   geom_line() +
+   geom_ribbon(aes(ymax = Upper.95.CI, ymin = Lower.95.CI, fill = measure), alpha = 0.5, color = NA) +
+   scale_x_date(date_breaks = "month", date_labels = "%Y-%m-%d",
+                limits = c(min_plot_dat, max_plot_dat)) +
+   facet_wrap(~measure, scales = "free_y", ncol = 1, labeller = labeller(measure = labs)) +
+   theme_light() + 
+   labs(x = NULL, y = NULL) +
+   theme(plot.margin = margin(t = 0.1, r = 0.1, b = 0, l = 0.1, unit = "in"),
+         strip.background = element_rect(fil = "white", color = "gray50"),
+         strip.text.x = element_text(size = 8, color = "gray40"),
+         axis.text.x = element_blank(),
+         axis.text.y = element_text(size = 6),
+         legend.position = "none")
> 
> n_plot_weekly = ggplot(plot_dat) + 
+   geom_rect(data = rainy_season_def, inherit.aes = F, aes(xmin = season_start, xmax = season_end, ymin = -Inf, ymax = Inf), color = "grey85", alpha = 0.2) +
+   geom_col(aes(x = biweek, y = N, fill = n_color)) + 
+   scale_x_date(date_breaks = "month", date_labels = "%Y-%m-%d",
+                limits = c(min_plot_dat, max_plot_dat)) +
+   labs(y = NULL, x = NULL) + 
+   scale_fill_manual(values = c("black")) +
+   facet_wrap(~n_color, ncol = 1,
+              labeller = labeller(n_color = n_lab)) +
+   theme_light() + 
+   theme(plot.margin = margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, unit = "in"),
+         strip.background = element_rect(fil = "white", color = "gray50"),
+         strip.text.x = element_text(size = 8, color = "gray40"),
+         axis.text = element_text(size = 6),
+         axis.text.x = element_text(angle=-90, size = 6, vjust = 0.5),
+         legend.position = "none")
> 
> plot <- plot_grid(rf_plot_weekly, n_plot_weekly, ncol = 1, rel_heights = c(3, 1), axis = "lr", align = "hv", labels = NULL, label_size = 1)
Warning messages:
1: Removed 10 rows containing missing values (`geom_rect()`). 
2: Removed 30 rows containing missing values (`geom_line()`). 
3: Removed 428 rows containing missing values (`position_stack()`). 
4: Removed 2 rows containing missing values (`geom_rect()`). 
5: Removed 2 rows containing missing values (`geom_col()`). 
> 
> ggsave(plot, filename = paste0(fig_dir, "2-diarrhea-0-risk-factors-weekly.tiff"), height = 7, width = 5, units = "in")
> 
> #--------------------------------------
> # Capture session info
> #--------------------------------------
> sessionInfo()
R version 4.2.0 (2022-04-22)
Platform: x86_64-apple-darwin17.0 (64-bit)
Running under: macOS Big Sur/Monterey 10.16

Matrix products: default
BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] parallel  grid      stats     graphics  grDevices utils     datasets 
[8] methods   base     

other attached packages:
 [1] lmtest_0.9-40      zoo_1.8-11         sandwich_3.0-2     cowplot_1.1.1     
 [5] MetBrewer_0.2.0    RColorBrewer_1.1-3 rcartocolor_2.0.0  broom_1.0.5       
 [9] magrittr_2.0.3     doRNG_1.8.2        rngtools_1.5.2     doParallel_1.0.17 
[13] iterators_1.0.14   foreach_1.5.2      tictoc_1.1         rmarkdown_2.25    
[17] kableExtra_1.3.4   forcats_0.5.2      readr_2.1.3        tibble_3.2.1      
[21] tidyverse_1.3.2    pgirmess_2.0.0     wrapr_2.0.9        caret_6.0-93      
[25] lattice_0.20-45    viridis_0.6.4      viridisLite_0.4.2  purrr_1.0.2       
[29] DHARMa_0.4.6       gamm4_0.2-6        lme4_1.1-35.1      Matrix_1.6-4      
[33] mgcv_1.8-40        nlme_3.1-160       assertthat_0.2.1   boxr_0.3.6        
[37] ncdf4_1.19         stringr_1.5.1      lubridate_1.8.0    washb_0.2.2       
[41] gridExtra_2.3      reshape2_1.4.4     tidyr_1.3.0        ggcorrplot_0.1.4  
[45] ggplot2_3.4.4      dplyr_1.1.4        here_1.0.1        

loaded via a namespace (and not attached):
 [1] readxl_1.4.3         backports_1.4.1      systemfonts_1.0.4   
 [4] plyr_1.8.9           sp_1.5-0             splines_4.2.0       
 [7] listenv_0.8.0        digest_0.6.33        htmltools_0.5.7     
[10] fansi_1.0.6          googlesheets4_1.0.1  tzdb_0.3.0          
[13] recipes_1.0.2        globals_0.16.1       modelr_0.1.9        
[16] gower_1.0.0          svglite_2.1.0        hardhat_1.2.0       
[19] colorspace_2.1-0     rvest_1.0.3          textshaping_0.3.6   
[22] haven_2.5.1          xfun_0.41            crayon_1.5.2        
[25] jsonlite_1.8.8       survival_3.4-0       glue_1.6.2          
[28] gtable_0.3.4         gargle_1.2.1         ipred_0.9-13        
[31] webshot_0.5.4        future.apply_1.9.1   scales_1.3.0        
[34] DBI_1.1.3            Rcpp_1.0.11          spData_2.2.0        
[37] units_0.8-0          spdep_1.2-7          proxy_0.4-27        
[40] stats4_4.2.0         lava_1.6.10          prodlim_2019.11.13  
[43] httr_1.4.7           wk_0.7.0             farver_2.1.1        
[46] pkgconfig_2.0.3      nnet_7.3-18          dbplyr_2.2.1        
[49] deldir_1.0-6         utf8_1.2.4           labeling_0.4.3      
[52] tidyselect_1.2.0     rlang_1.1.2          munsell_0.5.0       
[55] cellranger_1.1.0     tools_4.2.0          cli_3.6.2           
[58] generics_0.1.3       evaluate_0.23        fastmap_1.1.1       
[61] ragg_1.2.3           ModelMetrics_1.2.2.2 knitr_1.45.8        
[64] fs_1.6.3             s2_1.1.0             future_1.28.0       
[67] xml2_1.3.3           compiler_4.2.0       rstudioapi_0.14     
[70] e1071_1.7-11         reprex_2.0.2         stringi_1.8.2       
[73] classInt_0.4-8       nloptr_2.0.3         vctrs_0.6.5         
[76] pillar_1.9.0         lifecycle_1.0.4      data.table_1.14.10  
[79] R6_2.5.1             KernSmooth_2.23-20   parallelly_1.32.1   
[82] codetools_0.2-18     boot_1.3-28          MASS_7.3-58.1       
[85] rprojroot_2.0.4      withr_2.5.2          hms_1.1.3           
[88] rpart_4.1.16         timeDate_4021.106    class_7.3-20        
[91] minqa_1.2.6          googledrive_2.0.0    sf_1.0-12           
[94] pROC_1.18.0         
> 
> proc.time()
   user  system elapsed 
  6.561   0.666   7.534 
